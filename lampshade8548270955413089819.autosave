

int n_tiers = 5;
float[] tiers, lerps, lengths, angles;
float margin = 50;
PVector start, h1, h2, end;
PVector[] intersections;

void setup() {
    size(1300, 800);
    setTiers();

    start = new PVector(margin, margin);
    h1 = new PVector(500, margin);
    h2 = new PVector(200, 300);
    end = new PVector(200, height - margin);
}

void draw() {
    background(255);
    drawTiers();
    noFill();

    stroke(0, 0, 255);
    bezier(start.x, start.y, h1.x, h1.y, h2.x, h2.y, end.x, end.y);
    strokeWeight(2);
    stroke(0, 150, 150);
    line(start.x, start.y, h1.x, h1.y);
    line(end.x, end.y, h2.x, h2.y);

    drawHandle(h1);
    drawHandle(h2);
    drawHandle(end);

    stroke(0);
    loadIntersections();
    drawProfile();
    strokeWeight(1);
}

void setTiers() {
    tiers = new float[n_tiers];
    float totalHeight = height - margin * 2;
    for (int i = 0; i < n_tiers; i ++) {
        tiers[i] = margin + (i + 0.5) * totalHeight / n_tiers;
    }
}
